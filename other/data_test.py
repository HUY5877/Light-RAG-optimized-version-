
s = "2024-04-30 22:47:44【python】kilosort4安装步骤\n分类专栏： spike sorting 文章标签： python 开发语言 conda pip\n本文链接：https://blog.csdn.net/kakalakaka/article/details/138358171\n文章目录\n前言\n安装步骤\nSystem requirements\nInstructions\nDebugging pytorch installation\nanaconda环境中安装cuda11.8步骤\nRunning kilosort\n前言\nkilosort是\n神经科学 领域一个好用的spike sorting工具。本篇文章是根据\nkilosort4官方文档 的安装过程，存档方便下次重装环境，供大家参考。\n安装步骤\nSystem requirements\nLinux and Windows 64-bit are supported for running the code. At least\n8GB of GPU RAM is required to run the software (see docs for more recommendations). The software has been tested on\nWindows 10 and Ubuntu 20.04.\n可以在任务管理器>\n性能 看显卡内存\nInstructions\nIf you have an older environment you can remove it with before creating a new one.kilosort\n<代码开始>conda env remove -n kilosort<代码结束>\nInstall an\nAnaconda distribution of Python. Note you might need to use an anaconda prompt if you did not add anaconda to the path.（如果下载很慢，anaconda可以换一下清华源，方法可以见另一篇：\nspikeinterface安装 ）\nOpen an anaconda prompt / command prompt which has for python 3 in the pathconda\nCreate a new environment with python 3.9. Python 3.10 should work as well.\n<代码开始>conda create --name kilosort python=3.9<代码结束>\nTo activate this new environment, run\n<代码开始>conda activate kilosort<代码结束>\nTo install kilosort and the GUI, run . If you’re on a zsh\nserver , you may need to use ‘ ‘ around the kilosort[gui] call: `python -m\npip install ‘kilosort[gui]’.\n<代码开始>python -m pip install kilosort[gui]<代码结束>\nInstead of 5, you can install the minimal version of kilosort with .\n<代码开始>python -m pip install kilosort<代码结束>\nNext, if the CPU version of pytorch was installed (will happen on Windows), remove it with\n<代码开始>pip uninstall torch<代码结束>\n（跳到下一节debug，这一步装不了）Then install the\nGPU version of pytorch\n<代码开始>conda install pytorch pytorch-cuda=11.8 -c pytorch -c nvidia<代码结束>\n（直接装了就好）Note you will always have to run before you run kilosort. If you want to run jupyter notebooks in this environment, then also or , and .\n<代码开始>\nconda activate kilosort \nconda install jupyter \npip install notebook \npython -m pip install matplotlib\n<代码结束>\nDebugging pytorch installation\n理解原理后看下面的步骤\nIf step 8 does not work, you need to make sure the NVIDIA driver for your GPU is installed (available here). You may also need to install the CUDA libraries for it, we recommend CUDA 11.8.\nIf pytorch installation still fails, follow the instructions here to determine what version of pytorch to install. The Anaconda install is strongly recommended on Windows, and then choose the CUDA version that is supported by your GPU (newer GPUs may need newer CUDA versions > 10.2). For instance this command will install the 11.8 version on Linux and Windows (note the and commands are removed because kilosort doesn’t require them):torchvisiontorchaudio\nconda install pytorch pytorch-cuda=11.8 -c pytorch -c nvidia\nThis video has step-by-step installation instructions for NVIDIA drivers and pytorch in Windows (ignore the environment creation step with the .yml file, we have an environment already, to activate it use conda activate kilosort).\nanaconda环境中安装cuda11.8步骤\npytorch，cuda等版本需要一一对应才能正常运行\n装gpu driver，在此\nnvidia官网 上根据gpu型号选择\n在anaconda环境中装CUDA cudatoolkit和cudnn，\n参考博客 。一定要装在环境里，直接装在电脑里，其他包可能版本不对应就用不了了\n<代码开始>\nconda activate kilosort\nconda search cudatoolkit --info\nconda install cudatoolkit==11.8\nconda search cudnn --info\nconda install cudnn==8.9.2.26\n<代码结束>\n安装pytorch，只能用下面语句，不能用pytorch官网语句，因为上文说到没保留torch vision 和torch audio\n<代码开始>\nconda install pytorch pytorch-cuda=11.8 -c pytorch -c nvidia\n<代码结束>\n测试pytorch及cuda版本，输出应为11.8和8700\n<代码开始>\npython\nimport torch\nprint(torch.version.cuda)\nprint(torch.backends.cudnn.version())\n<代码结束>\nRunning kilosort\nOpen the GUI with\n<代码开始>\nconda activate kilosort\npython -m kilosort\n<代码结束>\nSelect the path to the binary file and optionally the results directory. We recommend putting the binary file on an SSD for faster processing.\nSelect the probe configuration (mat files recommended, they actually exclude off channels unlike prb files)\nHit LOAD. The data should now be visible.\nHit Run. This will run the pipeline and output the results in a format compatible with Phy, the most popular spike sorting curating software."


dd







print(s)


